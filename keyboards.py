import sevsu_constants

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

sevsu_markup = InlineKeyboardMarkup(row_width=2)
lk = InlineKeyboardButton(text='üë§ –ö–∞–±–∏–Ω–µ—Ç', url=sevsu_constants.LK_URL)
mudl = InlineKeyboardButton(text='üíª –ú—É–¥–ª', url=sevsu_constants.DO_SEVSU_URL)
rocket = InlineKeyboardButton(text='üöÄ –†–æ–∫–µ—Ç-—á–∞—Ç', url=sevsu_constants.ROCKET_CHAT_URL)
elective = InlineKeyboardButton(text='üéΩ –≠–ª–µ–∫—Ç–∏–≤—ã', url=sevsu_constants.ELECTIVE_URL)
sch = InlineKeyboardButton(text='üìñ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', url=sevsu_constants.SCHEDULE_URL)
sevsu_site = InlineKeyboardButton(text='üåä –°–∞–π—Ç', url=sevsu_constants.SEVSU_URL)
sevsu_markup.add(sevsu_site, lk, sch, mudl, rocket, elective)

schedule_groups_markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
sg1 = KeyboardButton(text='–ò–°–±-21-1-–æ')
sg2 = KeyboardButton(text='–ò–°–±-21-2-–æ')
sg3 = KeyboardButton(text='–ò–°–±-21-3-–æ')
sg4 = KeyboardButton(text='–ü–ò–±-21-1-–æ')
cancel_schedule = KeyboardButton('üóëÔ∏è –û—Ç–º–µ–Ω–∞')
schedule_groups_markup.add(sg1, sg2, sg3, sg4).add(cancel_schedule)


def get_sevsu_keyboard() -> InlineKeyboardMarkup:
    return sevsu_markup


def get_schedule_groups_keyboard() -> ReplyKeyboardMarkup:
    return schedule_groups_markup


def get_weekly_schedule_keyboard(available_weeks: list, week_num: int) -> InlineKeyboardMarkup:
    weekly_schedule_markup = InlineKeyboardMarkup(row_width=6)
    wsd1 = InlineKeyboardButton('–ü–Ω', callback_data='weekly_schedule_day_1')
    wsd2 = InlineKeyboardButton('–í—Ç', callback_data='weekly_schedule_day_2')
    wsd3 = InlineKeyboardButton('–°—Ä', callback_data='weekly_schedule_day_3')
    wsd4 = InlineKeyboardButton('–ß—Ç', callback_data='weekly_schedule_day_4')
    wsd5 = InlineKeyboardButton('–ü—Ç', callback_data='weekly_schedule_day_5')
    wsd6 = InlineKeyboardButton('–°–±', callback_data='weekly_schedule_day_6')
    weekly_schedule_markup.add(wsd1, wsd2, wsd3, wsd4, wsd5, wsd6)

    week_pos = available_weeks.index(week_num)
    if week_pos == 0:
        next_week_button = InlineKeyboardButton(f'üîç {week_num + 1} –ù–µ–¥–µ–ª—è', callback_data=f'schedule_week_{week_num + 1}')
        weekly_schedule_markup.add(next_week_button)
    elif week_pos == len(available_weeks)-1:
        prev_week_button = InlineKeyboardButton(f'üîç {week_num - 1} –ù–µ–¥–µ–ª—è', callback_data=f'schedule_week_{week_num - 1}')
        weekly_schedule_markup.add(prev_week_button)
    else:
        prev_week_button = InlineKeyboardButton(f'üîç {week_num - 1} –ù–µ–¥–µ–ª—è', callback_data=f'schedule_week_{week_num - 1}')
        next_week_button = InlineKeyboardButton(f'üîç {week_num + 1} –ù–µ–¥–µ–ª—è', callback_data=f'schedule_week_{week_num + 1}')
        weekly_schedule_markup.add(prev_week_button, next_week_button)
    return weekly_schedule_markup
